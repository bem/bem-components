block('button')(
    def()(function() {
        this.mods.checkable && this.mods.checked && (this.mods.pressed = true); // TODO: я не уверен, что это правильное место для этого, выяснить
        applyNext({ _button: this.ctx });
    }),

    tag()('button'),

    js()(true),

    attrs()(

        // Common attributes
        function() {
            var ctx = this.ctx,
                attrs = { role: 'button' };

            ctx.tabIndex && (attrs.tabindex = ctx.tabIndex);

            return attrs;
        },

        // Attributes for button variant
        match(function() { return !this.mods.type })(function() {
            var ctx = this.ctx,
                attrs = { type: ctx.type || 'button' };

            ctx.name && (attrs.name = ctx.name);
            ctx.val && (attrs.value = ctx.val);
            this.mods.disabled && (attrs.disabled = 'disabled');

            return this._.extend(applyNext(), attrs);
        })
    ),

    content()(
        function() {
            var content = [this.ctx.icon];
            typeof this.ctx.text !== 'undefined' &&
                content.push({ elem: 'text', content: this.ctx.text });
            return content;
        },
        match(function() { return typeof this.ctx.content !== 'undefined' })(function() {
            return this.ctx.content;
        })
    )

)
