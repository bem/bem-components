block('menu')(
    def()(function() {
        var ctx = this.ctx,
            mods = this.mods,
            firstItem,
            checkedItems = [];

        if(ctx.content) {
            var isValDef = typeof ctx.val !== 'undefined',
                containsVal = function(val) {
                    return isValDef &&
                        (mods.mode === 'check'?
                            ctx.val.indexOf(val) > -1 :
                            ctx.val === val);
                },
                iterateItems = function(content) {
                    var i = 0, itemOrGroup;
                    while(itemOrGroup = content[i++]) {
                        if(itemOrGroup.block === 'menu-item') {
                            itemOrGroup.attrs = itemOrGroup.attrs || {};
                            itemOrGroup.attrs.role = itemOrGroup.attrs.role || 'menuitem';

                            firstItem || (firstItem = itemOrGroup);
                            if(containsVal(itemOrGroup.val)) {
                                (itemOrGroup.mods = itemOrGroup.mods || {}).checked = true;
                                checkedItems.push(itemOrGroup);
                            }
                        } else { // menu__group
                            iterateItems(itemOrGroup.content);
                        }
                    }
                };

            if(!this.isArray(ctx.content)) throw Error('menu: content must be an array of the menu items');

            iterateItems(ctx.content);
        }

        this._firstItem = firstItem;
        this._checkedItems = checkedItems;

        applyNext({
            _menuMods : {
                theme : mods.theme,
                disabled : mods.disabled
            }
        });
    }),
    attrs()(function() {
        var ctx = this.ctx,
            attrs = {
                role : 'menu',
                id : ctx.id,
                'aria-label' : ctx.ariaLabel,
                'aria-labelledby' : ctx.ariaLabelledby
            };

        if(this.mods.disabled) {
            attrs['aria-disabled'] = true;
        } else {
            attrs.tabindex = ctx.tabIndex || 0;
        }

        return attrs;
    }),
    js()(true),
    mix()([{ elem : 'control' }])
);
